// UI Utilities - Comprehensive layout, accessibility, and interaction utilities

// =============================================================================
// LAYOUT FOUNDATION - Preventing overlap and ensuring proper stacking
// =============================================================================

// Core layout container - establishes proper stacking context and containment
.layout-container {
  position: relative;
  z-index: 1;
  contain: layout style;
  isolation: isolate;
  
  // Ensure all children respect document flow
  > * {
    position: relative;
    z-index: auto;
    contain: layout;
  }
}

// Grid layout fixes - prevent overlap in CSS Grid layouts
.grid-container {
  display: grid;
  position: relative;
  z-index: 1;
  contain: layout style;
  gap: 1rem;
  
  // Ensure grid items don't overlap
  > * {
    position: relative;
    z-index: auto;
    min-width: 0; // Prevent grid overflow
    min-height: 0;
  }
}

// Flex layout fixes - prevent overlap in Flexbox layouts
.flex-container {
  display: flex;
  position: relative;
  z-index: 1;
  contain: layout style;
  gap: 1rem;
  
  // Ensure flex items don't overlap
  > * {
    position: relative;
    z-index: auto;
    min-width: 0; // Prevent flex overflow
    flex-shrink: 1;
  }
}

// Section container - for main content sections
.section-container {
  position: relative;
  z-index: 1;
  contain: layout style;
  margin-bottom: 2rem;
  
  // Ensure proper spacing and no overlap
  + .section-container {
    margin-top: 2rem;
  }
}

// Article container - for content articles
.article-container {
  position: relative;
  z-index: 1;
  contain: layout style;
  
  // Ensure headings and content don't overlap
  h1, h2, h3, h4, h5, h6 {
    position: relative;
    z-index: auto;
    margin-bottom: 1rem;
  }
  
  p, ul, ol {
    position: relative;
    z-index: auto;
    margin-bottom: 1rem;
  }
}

// List container - prevent list overlap issues
.list-container {
  position: relative;
  z-index: 1;
  
  ul, ol {
    position: relative;
    z-index: auto;
    
    li {
      position: relative;
      z-index: auto;
      margin-bottom: 0.5rem;
    }
  }
}

// =============================================================================
// ACCESSIBILITY ENHANCEMENTS
// =============================================================================

// High contrast utilities for better accessibility
.high-contrast {
  --text-primary: #000000;
  --text-secondary: #333333;
  --bg-primary: #ffffff;
  --bg-secondary: #f8f9fa;
  --link-color: #0066cc;
  --link-hover: #004499;
  
  color: var(--text-primary);
  background-color: var(--bg-primary);
  
  a {
    color: var(--link-color);
    text-decoration: underline;
    
    &:hover, &:focus {
      color: var(--link-hover);
      text-decoration: underline;
    }
  }
}

// Accessible focus styles
.focus-visible {
  &:focus-visible {
    outline: 3px solid #0066cc;
    outline-offset: 2px;
    border-radius: 4px;
  }
}

// Screen reader only content
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Accessible link improvements
.accessible-link {
  color: #0066cc;
  text-decoration: underline;
  min-height: 44px; // Minimum touch target
  display: inline-flex;
  align-items: center;
  
  &:hover, &:focus {
    color: #004499;
    text-decoration: underline;
    background-color: rgba(0, 102, 204, 0.1);
  }
  
  &:focus-visible {
    outline: 3px solid #0066cc;
    outline-offset: 2px;
  }
  
  // Ensure link has accessible text
  &:empty::after {
    content: "[Link missing accessible text]";
    color: #dc3545;
    font-style: italic;
  }
}

// =============================================================================
// COMPONENT UTILITIES
// =============================================================================

// LinkedIn button icon styling
.btn-linkedin {
  display: inline-flex;
  align-items: center;
  min-height: 44px; // Accessible touch target
  
  img {
    height: 20px;
    width: 20px;
    vertical-align: middle;
    margin-right: 8px;
    alt: "LinkedIn";
  }
}

// Button base styles with accessibility
@media screen and (prefers-reduced-motion: reduce) {
.btn-accessible {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-height: 44px; // Minimum touch target
  min-width: 44px;
  padding: 0.75rem 1.5rem;
  border: 2px solid transparent;
  border-radius: 4px;
  font-weight: 600;
  text-decoration: none;
  cursor: pointer;
  transition: none;
  
  &:focus-visible {
    outline: 3px solid #0066cc;
    outline-offset: 2px;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}
}
.btn-accessible {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-height: 44px; // Minimum touch target
  min-width: 44px;
  padding: 0.75rem 1.5rem;
  border: 2px solid transparent;
  border-radius: 4px;
  font-weight: 600;
  text-decoration: none;
  cursor: pointer;
  transition: all 0.2s ease;
  
  &:focus-visible {
    outline: 3px solid #0066cc;
    outline-offset: 2px;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// =============================================================================
// RESPONSIVE AND ANIMATION UTILITIES
// =============================================================================

// Noscript fallbacks for reveal animations
@media screen and (-webkit-min-device-pixel-ratio: 0) {
  .reveal {
    opacity: 1 !important;
    transform: none !important;
  }
  
  #progress {
    display: none !important;
  }
}

.noscript .reveal {
  opacity: 1 !important;
  transform: none !important;
}

.noscript #progress {
  display: none !important;
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// =============================================================================
// LEGACY SUPPORT
// =============================================================================

// Backward compatibility - maps old class to new system
.no-overlap {
  @extend .layout-container;
}